# Generated by Django 4.2.1 on 2023-05-19 14:36

# Third Party Library
import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Member',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Почта')),
                ('name', models.CharField(max_length=200, verbose_name='Имя')),
                ('surname', models.CharField(max_length=200, verbose_name='Фамилия')),
                ('phone_num', models.CharField(error_messages='Формат должен быть: +99999999999', max_length=16, unique=True, validators=[django.core.validators.RegexValidator(regex='^\\+?\\d{8,15}$')], verbose_name='Номер телефона')),
                ('city', models.CharField(max_length=200, verbose_name='Город')),
                ('telegram', models.CharField(error_messages='Формат должен быть: @ник', max_length=200, unique=True, validators=[django.core.validators.RegexValidator(regex='^\\@.*$')], verbose_name='Ник в Telegram')),
                ('birthday', models.DateField(verbose_name='Дата рождения')),
                ('company', models.CharField(max_length=200, verbose_name='Компания')),
                ('job', models.CharField(max_length=200, verbose_name='Должность')),
                ('terms_agree', models.BooleanField(verbose_name='Согласие на обработку персональных данных')),
                ('approved', models.BooleanField(default=False, verbose_name='Одобрен')),
                ('is_staff', models.BooleanField(default=False, help_text='Определяет есть ли у пользователя досутп к адиминке.', verbose_name='Сотрудник')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='Суперюзер')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
